{"componentChunkName":"component---src-templates-doc-js","path":"/docs/main/core/file-upload/","result":{"pageContext":{"html":"<h1 id=\"handling-file-upload\" style=\"position:relative;\"><a href=\"#handling-file-upload\" aria-label=\"handling file upload permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Handling File Upload</h1>\n<p>As common a problem as it may seem, handling file upload requires a custom\nimplementation in your app. This page will guide you in handling file upload in\nyour API, with the help of\n<a href=\"https://github.com/dustin10/VichUploaderBundle\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">VichUploaderBundle</a>. It is\nrecommended you <a href=\"https://github.com/dustin10/VichUploaderBundle/blob/master/docs/index.md\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">read the documentation of\nVichUploaderBundle</a>\nbefore proceeding. It will help you get a grasp on how the bundle works, and why we use it.</p>\n<h2 id=\"installing-vichuploaderbundle\" style=\"position:relative;\"><a href=\"#installing-vichuploaderbundle\" aria-label=\"installing vichuploaderbundle permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Installing VichUploaderBundle</h2>\n<p>Install the bundle with the help of Composer:</p>\n<div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">docker compose exec php \\\n    composer require vich/uploader-bundle</code></pre></div>\n<p>This will create a new configuration file that you will need to slightly change\nto make it look like this.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># api/config/packages/vich_uploader.yaml</span>\n<span class=\"token key atrule\">vich_uploader</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">db_driver</span><span class=\"token punctuation\">:</span> orm\n    <span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> attribute\n    <span class=\"token key atrule\">mappings</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">media_object</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">uri_prefix</span><span class=\"token punctuation\">:</span> /media\n            <span class=\"token key atrule\">upload_destination</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'%kernel.project_dir%/public/media'</span>\n            <span class=\"token comment\"># Will rename uploaded files using a uniqueid as a prefix.</span>\n            <span class=\"token key atrule\">namer</span><span class=\"token punctuation\">:</span> Vich\\UploaderBundle\\Naming\\OrignameNamer</code></pre></div>\n<h2 id=\"uploading-to-a-dedicated-resource\" style=\"position:relative;\"><a href=\"#uploading-to-a-dedicated-resource\" aria-label=\"uploading to a dedicated resource permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Uploading to a Dedicated Resource</h2>\n<p>In this example, we will create a <code class=\"language-text\">MediaObject</code> API resource. We will post files\nto this resource endpoint, and then link the newly created resource to another\nresource (in our case: <code class=\"language-text\">Book</code>).</p>\n<p>This example will use a custom controller to receive the file.\nThe second example will use a custom <code class=\"language-text\">multipart/form-data</code> decoder to deserialize the resource instead.</p>\n<p><strong>Note</strong>: Uploading files won't work in <code class=\"language-text\">PUT</code> or <code class=\"language-text\">PATCH</code> requests, you must use <code class=\"language-text\">POST</code> method to upload files.\nSee <a href=\"https://github.com/symfony/symfony/issues/9226\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">the related issue on Symfony</a> and <a href=\"https://bugs.php.net/bug.php?id=55815\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">the related bug in PHP</a> talking about this behavior.</p>\n<h3 id=\"configuring-the-resource-receiving-the-uploaded-file\" style=\"position:relative;\"><a href=\"#configuring-the-resource-receiving-the-uploaded-file\" aria-label=\"configuring the resource receiving the uploaded file permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Configuring the Resource Receiving the Uploaded File</h3>\n<p>The <code class=\"language-text\">MediaObject</code> resource is implemented like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// api/src/Entity/MediaObject.php</span>\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Entity</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Metadata<span class=\"token punctuation\">\\</span>ApiProperty</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Metadata<span class=\"token punctuation\">\\</span>ApiResource</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Metadata<span class=\"token punctuation\">\\</span>Get</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Metadata<span class=\"token punctuation\">\\</span>GetCollection</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Metadata<span class=\"token punctuation\">\\</span>Post</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>OpenApi<span class=\"token punctuation\">\\</span>Model</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Controller<span class=\"token punctuation\">\\</span>CreateMediaObjectAction</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Doctrine<span class=\"token punctuation\">\\</span>ORM<span class=\"token punctuation\">\\</span>Mapping</span> <span class=\"token keyword\">as</span> <span class=\"token constant\">ORM</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>HttpFoundation<span class=\"token punctuation\">\\</span>File<span class=\"token punctuation\">\\</span>File</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>Serializer<span class=\"token punctuation\">\\</span>Annotation<span class=\"token punctuation\">\\</span>Groups</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>Validator<span class=\"token punctuation\">\\</span>Constraints</span> <span class=\"token keyword\">as</span> Assert<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Vich<span class=\"token punctuation\">\\</span>UploaderBundle<span class=\"token punctuation\">\\</span>Mapping<span class=\"token punctuation\">\\</span>Annotation</span> <span class=\"token keyword\">as</span> Vich<span class=\"token punctuation\">;</span>\n\n<span class=\"token attribute\"><span class=\"token delimiter punctuation\">#[</span><span class=\"token attribute-content\"><span class=\"token attribute-class-name class-name class-name-fully-qualified\">Vich<span class=\"token punctuation\">\\</span>Uploadable</span></span><span class=\"token delimiter punctuation\">]</span></span>\n<span class=\"token attribute\"><span class=\"token delimiter punctuation\">#[</span><span class=\"token attribute-content\"><span class=\"token attribute-class-name class-name class-name-fully-qualified\">ORM<span class=\"token punctuation\">\\</span>Entity</span></span><span class=\"token delimiter punctuation\">]</span></span>\n<span class=\"token attribute\"><span class=\"token delimiter punctuation\">#[</span><span class=\"token attribute-content\"><span class=\"token attribute-class-name class-name\">ApiResource</span><span class=\"token punctuation\">(</span>\n    <span class=\"token attribute-class-name class-name\">normalizationContext</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'groups'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'media_object:read'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> \n    <span class=\"token attribute-class-name class-name\">types</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'https://schema.org/MediaObject'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token attribute-class-name class-name\">operations</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token attribute-class-name class-name\">new</span> <span class=\"token attribute-class-name class-name\">Get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token attribute-class-name class-name\">new</span> <span class=\"token attribute-class-name class-name\">GetCollection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token attribute-class-name class-name\">new</span> <span class=\"token attribute-class-name class-name\">Post</span><span class=\"token punctuation\">(</span>\n            <span class=\"token attribute-class-name class-name\">controller</span><span class=\"token punctuation\">:</span> <span class=\"token attribute-class-name class-name\">CreateMediaObjectAction</span><span class=\"token operator\">::</span><span class=\"token constant\">class</span><span class=\"token punctuation\">,</span> \n            <span class=\"token attribute-class-name class-name\">deserialize</span><span class=\"token punctuation\">:</span> <span class=\"token attribute-class-name class-name\">false</span><span class=\"token punctuation\">,</span> \n            <span class=\"token attribute-class-name class-name\">validationContext</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'groups'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'Default'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'media_object_create'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> \n            <span class=\"token attribute-class-name class-name\">openapi</span><span class=\"token punctuation\">:</span> <span class=\"token attribute-class-name class-name\">new</span> <span class=\"token attribute-class-name class-name class-name-fully-qualified\">Model<span class=\"token punctuation\">\\</span>Operation</span><span class=\"token punctuation\">(</span>\n                <span class=\"token attribute-class-name class-name\">requestBody</span><span class=\"token punctuation\">:</span> <span class=\"token attribute-class-name class-name\">new</span> <span class=\"token attribute-class-name class-name class-name-fully-qualified\">Model<span class=\"token punctuation\">\\</span>RequestBody</span><span class=\"token punctuation\">(</span>\n                    <span class=\"token attribute-class-name class-name\">content</span><span class=\"token punctuation\">:</span> <span class=\"token attribute-class-name class-name\">new</span> <span class=\"token attribute-class-name class-name class-name-fully-qualified\"><span class=\"token punctuation\">\\</span>ArrayObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n                        <span class=\"token string single-quoted-string\">'multipart/form-data'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span>\n                            <span class=\"token string single-quoted-string\">'schema'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span>\n                                <span class=\"token string single-quoted-string\">'type'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'object'</span><span class=\"token punctuation\">,</span> \n                                <span class=\"token string single-quoted-string\">'properties'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span>\n                                    <span class=\"token string single-quoted-string\">'file'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span>\n                                        <span class=\"token string single-quoted-string\">'type'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'string'</span><span class=\"token punctuation\">,</span> \n                                        <span class=\"token string single-quoted-string\">'format'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'binary'</span>\n                                    <span class=\"token punctuation\">]</span>\n                                <span class=\"token punctuation\">]</span>\n                            <span class=\"token punctuation\">]</span>\n                        <span class=\"token punctuation\">]</span>\n                    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">)</span></span><span class=\"token delimiter punctuation\">]</span></span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">MediaObject</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token attribute\"><span class=\"token delimiter punctuation\">#[</span><span class=\"token attribute-content\"><span class=\"token attribute-class-name class-name class-name-fully-qualified\">ORM<span class=\"token punctuation\">\\</span>Id</span><span class=\"token punctuation\">,</span> <span class=\"token attribute-class-name class-name class-name-fully-qualified\">ORM<span class=\"token punctuation\">\\</span>Column</span><span class=\"token punctuation\">,</span> <span class=\"token attribute-class-name class-name class-name-fully-qualified\">ORM<span class=\"token punctuation\">\\</span>GeneratedValue</span></span><span class=\"token delimiter punctuation\">]</span></span>\n    <span class=\"token keyword\">private</span> <span class=\"token operator\">?</span><span class=\"token keyword type-hint\">int</span> <span class=\"token variable\">$id</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token attribute\"><span class=\"token delimiter punctuation\">#[</span><span class=\"token attribute-content\"><span class=\"token attribute-class-name class-name\">ApiProperty</span><span class=\"token punctuation\">(</span><span class=\"token attribute-class-name class-name\">types</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'https://schema.org/contentUrl'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></span><span class=\"token delimiter punctuation\">]</span></span>\n    <span class=\"token attribute\"><span class=\"token delimiter punctuation\">#[</span><span class=\"token attribute-content\"><span class=\"token attribute-class-name class-name\">Groups</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'media_object:read'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></span><span class=\"token delimiter punctuation\">]</span></span>\n    <span class=\"token keyword\">public</span> <span class=\"token operator\">?</span><span class=\"token keyword type-hint\">string</span> <span class=\"token variable\">$contentUrl</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token attribute\"><span class=\"token delimiter punctuation\">#[</span><span class=\"token attribute-content\"><span class=\"token attribute-class-name class-name class-name-fully-qualified\">Vich<span class=\"token punctuation\">\\</span>UploadableField</span><span class=\"token punctuation\">(</span><span class=\"token attribute-class-name class-name\">mapping</span><span class=\"token punctuation\">:</span> <span class=\"token string double-quoted-string\">\"media_object\"</span><span class=\"token punctuation\">,</span> <span class=\"token attribute-class-name class-name\">fileNameProperty</span><span class=\"token punctuation\">:</span> <span class=\"token string double-quoted-string\">\"filePath\"</span><span class=\"token punctuation\">)</span></span><span class=\"token delimiter punctuation\">]</span></span>\n    <span class=\"token attribute\"><span class=\"token delimiter punctuation\">#[</span><span class=\"token attribute-content\"><span class=\"token attribute-class-name class-name class-name-fully-qualified\">Assert<span class=\"token punctuation\">\\</span>NotNull</span><span class=\"token punctuation\">(</span><span class=\"token attribute-class-name class-name\">groups</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'media_object_create'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></span><span class=\"token delimiter punctuation\">]</span></span>\n    <span class=\"token keyword\">public</span> <span class=\"token operator\">?</span><span class=\"token class-name type-declaration\">File</span> <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token attribute\"><span class=\"token delimiter punctuation\">#[</span><span class=\"token attribute-content\"><span class=\"token attribute-class-name class-name class-name-fully-qualified\">ORM<span class=\"token punctuation\">\\</span>Column</span><span class=\"token punctuation\">(</span><span class=\"token attribute-class-name class-name\">nullable</span><span class=\"token punctuation\">:</span> <span class=\"token attribute-class-name class-name\">true</span><span class=\"token punctuation\">)</span></span><span class=\"token delimiter punctuation\">]</span></span> \n    <span class=\"token keyword\">public</span> <span class=\"token operator\">?</span><span class=\"token keyword type-hint\">string</span> <span class=\"token variable\">$filePath</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token operator\">?</span><span class=\"token keyword return-type\">int</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">id</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></span></code></pre></div>\n<h3 id=\"creating-the-controller\" style=\"position:relative;\"><a href=\"#creating-the-controller\" aria-label=\"creating the controller permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Creating the Controller</h3>\n<p>At this point, the entity is configured, but we still need to write the action\nthat handles the file upload.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// api/src/Controller/CreateMediaObjectAction.php</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Controller</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Entity<span class=\"token punctuation\">\\</span>MediaObject</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Bundle<span class=\"token punctuation\">\\</span>FrameworkBundle<span class=\"token punctuation\">\\</span>Controller<span class=\"token punctuation\">\\</span>AbstractController</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>HttpFoundation<span class=\"token punctuation\">\\</span>Request</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>HttpKernel<span class=\"token punctuation\">\\</span>Attribute<span class=\"token punctuation\">\\</span>AsController</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>HttpKernel<span class=\"token punctuation\">\\</span>Exception<span class=\"token punctuation\">\\</span>BadRequestHttpException</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token attribute\"><span class=\"token delimiter punctuation\">#[</span><span class=\"token attribute-content\"><span class=\"token attribute-class-name class-name\">AsController</span></span><span class=\"token delimiter punctuation\">]</span></span>\n<span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">CreateMediaObjectAction</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">AbstractController</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__invoke</span><span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Request</span> <span class=\"token variable\">$request</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token class-name return-type\">MediaObject</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$uploadedFile</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$request</span><span class=\"token operator\">-></span><span class=\"token property\">files</span><span class=\"token operator\">-></span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token variable\">$uploadedFile</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BadRequestHttpException</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'\"file\" is required'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token variable\">$mediaObject</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MediaObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$mediaObject</span><span class=\"token operator\">-></span><span class=\"token property\">file</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$uploadedFile</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$mediaObject</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></span></code></pre></div>\n<h3 id=\"resolving-the-file-url\" style=\"position:relative;\"><a href=\"#resolving-the-file-url\" aria-label=\"resolving the file url permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Resolving the File URL</h3>\n<p>Returning the plain file path on the filesystem where the file is stored is not useful for the client, which needs a\nURL to work with.</p>\n<p>A <a href=\"/docs/main/core/serialization/#normalization\">normalizer</a> could be used to set the <code class=\"language-text\">contentUrl</code> property:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// api/src/Serializer/MediaObjectNormalizer.php</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Serializer</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Entity<span class=\"token punctuation\">\\</span>MediaObject</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>Serializer<span class=\"token punctuation\">\\</span>Normalizer<span class=\"token punctuation\">\\</span>ContextAwareNormalizerInterface</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>Serializer<span class=\"token punctuation\">\\</span>Normalizer<span class=\"token punctuation\">\\</span>NormalizerAwareInterface</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>Serializer<span class=\"token punctuation\">\\</span>Normalizer<span class=\"token punctuation\">\\</span>NormalizerAwareTrait</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Vich<span class=\"token punctuation\">\\</span>UploaderBundle<span class=\"token punctuation\">\\</span>Storage<span class=\"token punctuation\">\\</span>StorageInterface</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">MediaObjectNormalizer</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">ContextAwareNormalizerInterface</span><span class=\"token punctuation\">,</span> NormalizerAwareInterface\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">use</span> <span class=\"token package\">NormalizerAwareTrait</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">ALREADY_CALLED</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'MEDIA_OBJECT_NORMALIZER_ALREADY_CALLED'</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">private</span> <span class=\"token class-name type-declaration\">StorageInterface</span> <span class=\"token variable\">$storage</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">normalize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$object</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">?</span><span class=\"token keyword type-hint\">string</span> <span class=\"token variable\">$format</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword type-hint\">array</span> <span class=\"token variable\">$context</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword return-type\">array</span><span class=\"token operator\">|</span><span class=\"token keyword type-declaration\">string</span><span class=\"token operator\">|</span><span class=\"token keyword type-declaration\">int</span><span class=\"token operator\">|</span><span class=\"token keyword type-declaration\">float</span><span class=\"token operator\">|</span><span class=\"token keyword type-declaration\">bool</span><span class=\"token operator\">|</span><span class=\"token class-name class-name-fully-qualified\"><span class=\"token punctuation\">\\</span>ArrayObject</span><span class=\"token operator\">|</span><span class=\"token keyword type-declaration\">null</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$context</span><span class=\"token punctuation\">[</span><span class=\"token keyword static-context\">self</span><span class=\"token operator\">::</span><span class=\"token constant\">ALREADY_CALLED</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token variable\">$object</span><span class=\"token operator\">-></span><span class=\"token property\">contentUrl</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">storage</span><span class=\"token operator\">-></span><span class=\"token function\">resolveUri</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$object</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">normalizer</span><span class=\"token operator\">-></span><span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$object</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$format</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$context</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">supportsNormalization</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">?</span><span class=\"token keyword type-hint\">string</span> <span class=\"token variable\">$format</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword type-hint\">array</span> <span class=\"token variable\">$context</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword return-type\">bool</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$context</span><span class=\"token punctuation\">[</span><span class=\"token keyword static-context\">self</span><span class=\"token operator\">::</span><span class=\"token constant\">ALREADY_CALLED</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$data</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">MediaObject</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></span></code></pre></div>\n<h3 id=\"making-a-request-to-the-media_objects-endpoint\" style=\"position:relative;\"><a href=\"#making-a-request-to-the-media_objects-endpoint\" aria-label=\"making a request to the media_objects endpoint permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Making a Request to the <code class=\"language-text\">/media_objects</code> Endpoint</h3>\n<p>Your <code class=\"language-text\">/media_objects</code> endpoint is now ready to receive a <code class=\"language-text\">POST</code> request with a\nfile. This endpoint accepts standard <code class=\"language-text\">multipart/form-data</code>-encoded data, but\nnot JSON data. You will need to format your request accordingly. After posting\nyour data, you will get a response looking like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"@type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://schema.org/MediaObject\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"@id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/media_objects/&lt;id>\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"contentUrl\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;url>\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"accessing-your-media-objects-directly\" style=\"position:relative;\"><a href=\"#accessing-your-media-objects-directly\" aria-label=\"accessing your media objects directly permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Accessing Your Media Objects Directly</h3>\n<p>You will need to modify your Caddyfile to allow the above <code class=\"language-text\">contentUrl</code> to be accessed directly. If you followed the above configuration for the VichUploaderBundle, that will be in <code class=\"language-text\">api/public/media</code>. Add your folder to the list of path matches, e.g. <code class=\"language-text\">|^/media/|</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"caddyfile\"><pre class=\"language-caddyfile\"><code class=\"language-caddyfile\">...\n# Matches requests for HTML documents, for static files and for Next.js files,\n# except for known API paths and paths with extensions handled by API Platform\n@pwa expression `(\n        {header.Accept}.matches(&quot;\\\\btext/html\\\\b&quot;)\n        &amp;&amp; !{path}.matches(&quot;(?i)(?:^/docs|^/graphql|^/bundles/|^/media/|^/_profiler|^/_wdt|\\\\.(?:json|html$|csv$|ya?ml$|xml$))&quot;)\n...</code></pre></div>\n<h3 id=\"linking-a-mediaobject-resource-to-another-resource\" style=\"position:relative;\"><a href=\"#linking-a-mediaobject-resource-to-another-resource\" aria-label=\"linking a mediaobject resource to another resource permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Linking a MediaObject Resource to Another Resource</h3>\n<p>We now need to update our <code class=\"language-text\">Book</code> resource, so that we can link a <code class=\"language-text\">MediaObject</code>\nto serve as the book cover.</p>\n<p>We first need to edit our Book resource, and add a new property called <code class=\"language-text\">image</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// api/src/Entity/Book.php</span>\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Entity</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Metadata<span class=\"token punctuation\">\\</span>ApiResource</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Metadata<span class=\"token punctuation\">\\</span>ApiProperty</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Doctrine<span class=\"token punctuation\">\\</span>ORM<span class=\"token punctuation\">\\</span>Mapping</span> <span class=\"token keyword\">as</span> <span class=\"token constant\">ORM</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>HttpFoundation<span class=\"token punctuation\">\\</span>File<span class=\"token punctuation\">\\</span>File</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Vich<span class=\"token punctuation\">\\</span>UploaderBundle<span class=\"token punctuation\">\\</span>Mapping<span class=\"token punctuation\">\\</span>Annotation</span> <span class=\"token keyword\">as</span> Vich<span class=\"token punctuation\">;</span>\n\n<span class=\"token attribute\"><span class=\"token delimiter punctuation\">#[</span><span class=\"token attribute-content\"><span class=\"token attribute-class-name class-name class-name-fully-qualified\">ORM<span class=\"token punctuation\">\\</span>Entity</span></span><span class=\"token delimiter punctuation\">]</span></span>\n<span class=\"token attribute\"><span class=\"token delimiter punctuation\">#[</span><span class=\"token attribute-content\"><span class=\"token attribute-class-name class-name\">ApiResource</span><span class=\"token punctuation\">(</span><span class=\"token attribute-class-name class-name\">types</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'https://schema.org/Book'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></span><span class=\"token delimiter punctuation\">]</span></span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Book</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n\n    <span class=\"token attribute\"><span class=\"token delimiter punctuation\">#[</span><span class=\"token attribute-content\"><span class=\"token attribute-class-name class-name class-name-fully-qualified\">ORM<span class=\"token punctuation\">\\</span>ManyToOne</span><span class=\"token punctuation\">(</span><span class=\"token attribute-class-name class-name\">targetEntity</span><span class=\"token punctuation\">:</span> <span class=\"token attribute-class-name class-name\">MediaObject</span><span class=\"token operator\">::</span><span class=\"token constant\">class</span><span class=\"token punctuation\">)</span></span><span class=\"token delimiter punctuation\">]</span></span>\n    <span class=\"token attribute\"><span class=\"token delimiter punctuation\">#[</span><span class=\"token attribute-content\"><span class=\"token attribute-class-name class-name class-name-fully-qualified\">ORM<span class=\"token punctuation\">\\</span>JoinColumn</span><span class=\"token punctuation\">(</span><span class=\"token attribute-class-name class-name\">nullable</span><span class=\"token punctuation\">:</span> <span class=\"token attribute-class-name class-name\">true</span><span class=\"token punctuation\">)</span></span><span class=\"token delimiter punctuation\">]</span></span>\n    <span class=\"token attribute\"><span class=\"token delimiter punctuation\">#[</span><span class=\"token attribute-content\"><span class=\"token attribute-class-name class-name\">ApiProperty</span><span class=\"token punctuation\">(</span><span class=\"token attribute-class-name class-name\">types</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'https://schema.org/image'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></span><span class=\"token delimiter punctuation\">]</span></span>\n    <span class=\"token keyword\">public</span> <span class=\"token operator\">?</span><span class=\"token class-name type-declaration\">MediaObject</span> <span class=\"token variable\">$image</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></span></code></pre></div>\n<p>By sending a POST request to create a new book, linked with the previously\nuploaded cover, you can have a nice illustrated book record!</p>\n<p><code class=\"language-text\">POST /books</code></p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"The name\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"image\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/media_objects/&lt;id>\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Voilà! You can now send files to your API, and link them to any other resource\nin your app.</p>\n<h3 id=\"testing\" style=\"position:relative;\"><a href=\"#testing\" aria-label=\"testing permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Testing</h3>\n<p>To test your upload with <code class=\"language-text\">ApiTestCase</code>, you can write a method as below:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// tests/MediaObjectTest.php</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Tests</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Symfony<span class=\"token punctuation\">\\</span>Bundle<span class=\"token punctuation\">\\</span>Test<span class=\"token punctuation\">\\</span>ApiTestCase</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Entity<span class=\"token punctuation\">\\</span>MediaObject</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Hautelook<span class=\"token punctuation\">\\</span>AliceBundle<span class=\"token punctuation\">\\</span>PhpUnit<span class=\"token punctuation\">\\</span>RefreshDatabaseTrait</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>HttpFoundation<span class=\"token punctuation\">\\</span>File<span class=\"token punctuation\">\\</span>UploadedFile</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">MediaObjectTest</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ApiTestCase</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">use</span> <span class=\"token package\">RefreshDatabaseTrait</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">testCreateAMediaObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword return-type\">void</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UploadedFile</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'fixtures/files/image.png'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'image.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$client</span> <span class=\"token operator\">=</span> <span class=\"token keyword static-context\">self</span><span class=\"token operator\">::</span><span class=\"token function\">createClient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token variable\">$client</span><span class=\"token operator\">-></span><span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'POST'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'/media_objects'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token string single-quoted-string\">'headers'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'Content-Type'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'multipart/form-data'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string single-quoted-string\">'extra'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span>\n                <span class=\"token comment\">// If you have additional fields in your MediaObject entity, use the parameters.</span>\n                <span class=\"token string single-quoted-string\">'parameters'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span>\n                    <span class=\"token string single-quoted-string\">'title'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'My file uploaded'</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string single-quoted-string\">'files'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span>\n                    <span class=\"token string single-quoted-string\">'file'</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">assertResponseIsSuccessful</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">assertMatchesResourceItemJsonSchema</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">MediaObject</span><span class=\"token operator\">::</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">assertJsonContains</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n            <span class=\"token string single-quoted-string\">'title'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'My file uploaded'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></span></code></pre></div>\n<h2 id=\"uploading-to-an-existing-resource-with-its-fields\" style=\"position:relative;\"><a href=\"#uploading-to-an-existing-resource-with-its-fields\" aria-label=\"uploading to an existing resource with its fields permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Uploading to an Existing Resource with its Fields</h2>\n<p>In this example, the file will be included in an existing resource (in our case: <code class=\"language-text\">Book</code>).\nThe file and the resource fields will be posted to the resource endpoint.</p>\n<p>This example will use a custom <code class=\"language-text\">multipart/form-data</code> decoder to deserialize the resource instead of a custom controller.</p>\n<h3 id=\"configuring-the-existing-resource-receiving-the-uploaded-file\" style=\"position:relative;\"><a href=\"#configuring-the-existing-resource-receiving-the-uploaded-file\" aria-label=\"configuring the existing resource receiving the uploaded file permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Configuring the Existing Resource Receiving the Uploaded File</h3>\n<p>The <code class=\"language-text\">Book</code> resource needs to be modified like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// api/src/Entity/Book.php</span>\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Entity</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Metadata<span class=\"token punctuation\">\\</span>ApiProperty</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Metadata<span class=\"token punctuation\">\\</span>ApiResource</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Metadata<span class=\"token punctuation\">\\</span>GetCollection</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Metadata<span class=\"token punctuation\">\\</span>Post</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Doctrine<span class=\"token punctuation\">\\</span>ORM<span class=\"token punctuation\">\\</span>Mapping</span> <span class=\"token keyword\">as</span> <span class=\"token constant\">ORM</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>HttpFoundation<span class=\"token punctuation\">\\</span>File<span class=\"token punctuation\">\\</span>File</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>Serializer<span class=\"token punctuation\">\\</span>Annotation<span class=\"token punctuation\">\\</span>Groups</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Vich<span class=\"token punctuation\">\\</span>UploaderBundle<span class=\"token punctuation\">\\</span>Mapping<span class=\"token punctuation\">\\</span>Annotation</span> <span class=\"token keyword\">as</span> Vich<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @Vich\\Uploadable\n */</span>\n<span class=\"token attribute\"><span class=\"token delimiter punctuation\">#[</span><span class=\"token attribute-content\"><span class=\"token attribute-class-name class-name class-name-fully-qualified\">ORM<span class=\"token punctuation\">\\</span>Entity</span></span><span class=\"token delimiter punctuation\">]</span></span>\n<span class=\"token attribute\"><span class=\"token delimiter punctuation\">#[</span><span class=\"token attribute-content\"><span class=\"token attribute-class-name class-name\">ApiResource</span><span class=\"token punctuation\">(</span>\n    <span class=\"token attribute-class-name class-name\">normalizationContext</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'groups'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'book:read'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> \n    <span class=\"token attribute-class-name class-name\">denormalizationContext</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'groups'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'book:write'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> \n    <span class=\"token attribute-class-name class-name\">types</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'https://schema.org/Book'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token attribute-class-name class-name\">operations</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token attribute-class-name class-name\">new</span> <span class=\"token attribute-class-name class-name\">GetCollection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token attribute-class-name class-name\">new</span> <span class=\"token attribute-class-name class-name\">Post</span><span class=\"token punctuation\">(</span><span class=\"token attribute-class-name class-name\">inputFormats</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'multipart'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'multipart/form-data'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">)</span></span><span class=\"token delimiter punctuation\">]</span></span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Book</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n\n    <span class=\"token attribute\"><span class=\"token delimiter punctuation\">#[</span><span class=\"token attribute-content\"><span class=\"token attribute-class-name class-name\">ApiProperty</span><span class=\"token punctuation\">(</span><span class=\"token attribute-class-name class-name\">types</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'https://schema.org/contentUrl'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></span><span class=\"token delimiter punctuation\">]</span></span>\n    <span class=\"token attribute\"><span class=\"token delimiter punctuation\">#[</span><span class=\"token attribute-content\"><span class=\"token attribute-class-name class-name\">Groups</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'book:read'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></span><span class=\"token delimiter punctuation\">]</span></span>\n    <span class=\"token keyword\">public</span> <span class=\"token operator\">?</span><span class=\"token keyword type-hint\">string</span> <span class=\"token variable\">$contentUrl</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * @Vich\\UploadableField(mapping=\"media_object\", fileNameProperty=\"filePath\")\n     */</span>\n    <span class=\"token attribute\"><span class=\"token delimiter punctuation\">#[</span><span class=\"token attribute-content\"><span class=\"token attribute-class-name class-name\">Groups</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'book:write'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></span><span class=\"token delimiter punctuation\">]</span></span>\n    <span class=\"token keyword\">public</span> <span class=\"token operator\">?</span><span class=\"token class-name type-declaration\">File</span> <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token attribute\"><span class=\"token delimiter punctuation\">#[</span><span class=\"token attribute-content\"><span class=\"token attribute-class-name class-name class-name-fully-qualified\">ORM<span class=\"token punctuation\">\\</span>Column</span><span class=\"token punctuation\">(</span><span class=\"token attribute-class-name class-name\">nullable</span><span class=\"token punctuation\">:</span> <span class=\"token attribute-class-name class-name\">true</span><span class=\"token punctuation\">)</span></span><span class=\"token delimiter punctuation\">]</span></span> \n    <span class=\"token keyword\">public</span> <span class=\"token operator\">?</span><span class=\"token keyword type-hint\">string</span> <span class=\"token variable\">$filePath</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></span></code></pre></div>\n<h3 id=\"handling-the-multipart-deserialization\" style=\"position:relative;\"><a href=\"#handling-the-multipart-deserialization\" aria-label=\"handling the multipart deserialization permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Handling the Multipart Deserialization</h3>\n<p>By default, Symfony is not able to decode <code class=\"language-text\">multipart/form-data</code>-encoded data.\nWe need to create our own decoder to do it:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// api/src/Encoder/MultipartDecoder.php</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Encoder</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>HttpFoundation<span class=\"token punctuation\">\\</span>RequestStack</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>Serializer<span class=\"token punctuation\">\\</span>Encoder<span class=\"token punctuation\">\\</span>DecoderInterface</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">MultipartDecoder</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">DecoderInterface</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">FORMAT</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'multipart'</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">private</span> <span class=\"token class-name type-declaration\">RequestStack</span> <span class=\"token variable\">$requestStack</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * {@inheritdoc}\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">decode</span><span class=\"token punctuation\">(</span><span class=\"token keyword type-hint\">string</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">,</span> <span class=\"token keyword type-hint\">string</span> <span class=\"token variable\">$format</span><span class=\"token punctuation\">,</span> <span class=\"token keyword type-hint\">array</span> <span class=\"token variable\">$context</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token operator\">?</span><span class=\"token keyword return-type\">array</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$request</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">requestStack</span><span class=\"token operator\">-></span><span class=\"token function\">getCurrentRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token variable\">$request</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token function\">array_map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">static</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-hint\">string</span> <span class=\"token variable\">$element</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// Multipart form values will be encoded in JSON.</span>\n            <span class=\"token variable\">$decoded</span> <span class=\"token operator\">=</span> <span class=\"token function\">json_decode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$element</span><span class=\"token punctuation\">,</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">return</span> <span class=\"token function\"><span class=\"token punctuation\">\\</span>is_array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$decoded</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token variable\">$decoded</span> <span class=\"token punctuation\">:</span> <span class=\"token variable\">$element</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$request</span><span class=\"token operator\">-></span><span class=\"token property\">request</span><span class=\"token operator\">-></span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token variable\">$request</span><span class=\"token operator\">-></span><span class=\"token property\">files</span><span class=\"token operator\">-></span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * {@inheritdoc}\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">supportsDecoding</span><span class=\"token punctuation\">(</span><span class=\"token keyword type-hint\">string</span> <span class=\"token variable\">$format</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword return-type\">bool</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword static-context\">self</span><span class=\"token operator\">::</span><span class=\"token constant\">FORMAT</span> <span class=\"token operator\">===</span> <span class=\"token variable\">$format</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></span></code></pre></div>\n<p>If you're not using <code class=\"language-text\">autowiring</code> and <code class=\"language-text\">autoconfiguring</code>, don't forget to register the service and tag it as <code class=\"language-text\">serializer.encoder</code>.</p>\n<p>We also need to make sure the field containing the uploaded file is not denormalized:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// api/src/Serializer/UploadedFileDenormalizer.php</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Serializer</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>HttpFoundation<span class=\"token punctuation\">\\</span>File<span class=\"token punctuation\">\\</span>UploadedFile</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>Serializer<span class=\"token punctuation\">\\</span>Normalizer<span class=\"token punctuation\">\\</span>DenormalizerInterface</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">UploadedFileDenormalizer</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">DenormalizerInterface</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/**\n     * {@inheritdoc}\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">denormalize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">,</span> <span class=\"token keyword type-hint\">string</span> <span class=\"token variable\">$type</span><span class=\"token punctuation\">,</span> <span class=\"token keyword type-hint\">string</span> <span class=\"token variable\">$format</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword type-hint\">array</span> <span class=\"token variable\">$context</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token class-name return-type\">UploadedFile</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * {@inheritdoc}\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">supportsDenormalization</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$type</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$format</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword return-type\">bool</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$data</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">UploadedFile</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></span></code></pre></div>\n<p>If you're not using <code class=\"language-text\">autowiring</code> and <code class=\"language-text\">autoconfiguring</code>, don't forget to register the service and tag it as <code class=\"language-text\">serializer.normalizer</code>.</p>\n<p>For resolving the file URL, you can use a custom normalizer, like shown in <a href=\"#resolving-the-file-url\">the previous example</a>.</p>","nav":{"chapters":[{"title":"The Distribution: Create Powerful APIs with Ease","path":"distribution","items":[{"id":"index","title":"Getting Started With API Platform: Create Your API and Your Jamstack Site","anchors":[{"id":"introduction","title":"Introduction"},{"id":"a-bookshop-api","title":"A Bookshop API"},{"id":"installing-the-framework","title":"Installing the Framework","anchors":[{"id":"using-the-api-platform-distribution-recommended","title":"Using the API Platform Distribution (Recommended)"},{"id":"using-symfony-cli","title":"Using Symfony CLI"}]},{"id":"its-ready","title":"It's Ready"},{"id":"bringing-your-own-model","title":"Bringing your Own Model"},{"id":"plugging-the-persistence-system","title":"Plugging the Persistence System"},{"id":"validating-data","title":"Validating Data"},{"id":"adding-graphql-support","title":"Adding GraphQL Support"},{"id":"the-admin","title":"The Admin"},{"id":"a-nextjs-web-app","title":"A Next.js Web App"},{"id":"hooking-your-own-business-logic","title":"Hooking Your Own Business Logic"},{"id":"other-features","title":"Other Features"},{"id":"screencasts","title":"Screencasts"}]},{"id":"testing","title":"Testing the API","anchors":[{"id":"creating-data-fixtures","title":"Creating Data Fixtures"},{"id":"writing-functional-tests","title":"Writing Functional Tests"},{"id":"writing-unit-tests","title":"Writing Unit Tests"},{"id":"additional-and-alternative-testing-tools","title":"Additional and Alternative Testing Tools"},{"id":"using-the-api-platform-distribution-for-end-to-end-testing","title":"Using the API Platform Distribution for End-to-end Testing"}]},{"id":"debugging","title":"Debugging","anchors":[{"id":"xdebug","title":"Xdebug"},{"id":"add-a-development-stage-to-the-dockerfile","title":"Add a Development Stage to the Dockerfile"},{"id":"configure-xdebug-with-docker-compose-override","title":"Configure Xdebug with Docker Compose Override"},{"id":"troubleshooting","title":"Troubleshooting"}]},{"id":"caddy","title":"Configuring the Caddy Web Server"}]},{"title":"Core","path":"core","items":[{"id":"index","title":"The API Platform Core Library","anchors":[{"id":"features","title":"Features"},{"id":"screencasts","title":"Screencasts"}]},{"id":"getting-started","title":"Getting started","anchors":[{"id":"migrating-from-fosrestbundle","title":"Migrating from FOSRestBundle"},{"id":"installing-api-platform","title":"Installing API Platform"},{"id":"before-reading-this-documentation","title":"Before Reading this Documentation"},{"id":"mapping-the-entities","title":"Mapping the Entities","anchors":[{"id":"product","title":"Product"}]}]},{"id":"upgrade-guide","title":"Upgrade Guide","anchors":[{"id":"api-platform-2730","title":"API Platform 2.7/3.0","anchors":[{"id":"i-want-to-try-the-new-metadata-system","title":"I Want to Try the New Metadata System"},{"id":"im-migrating-from-26-and-want-to-prepare-for-30","title":"I'm Migrating From 2.6 and Want to Prepare For 3.0"}]},{"id":"changes","title":"Changes","anchors":[{"id":"summary-of-the-changes-between-26-and-2730","title":"Summary of the Changes Between 2.6 And 2.7/3.0"},{"id":"apiresource-metadata","title":"ApiResource Metadata"},{"id":"removal-of-itemcollection-operations","title":"Removal of Item/Collection Operations"},{"id":"metadata-changes","title":"Metadata Changes","anchors":[{"id":"apiresource","title":"#[ApiResource]"},{"id":"apiproperty","title":"#[ApiProperty]"}]},{"id":"the-metadatabackwardcompatibility_layer-flag","title":"The metadatabackwardcompatibility_layer Flag"},{"id":"searchfilter","title":"SearchFilter"}]},{"id":"the-upgrade-command","title":"The Upgrade Command"},{"id":"providersprocessors","title":"Providers/Processors"},{"id":"datatransformers-and-dto-support","title":"DataTransformers and DTO Support"}]},{"id":"design","title":"General Design Considerations"},{"id":"extending","title":"Extending API Platform","anchors":[{"id":"doctrine-specific-extension-points","title":"Doctrine Specific Extension Points"},{"id":"leveraging-the-built-in-infrastructure-using-composition","title":"Leveraging the Built-in Infrastructure Using Composition"}]},{"id":"testing","title":"Testing Utilities","anchors":[{"id":"the-test-httpclient","title":"The Test HttpClient"},{"id":"api-test-assertions","title":"API Test Assertions"},{"id":"http-test-assertions","title":"HTTP Test Assertions"}]},{"id":"operations","title":"Operations","anchors":[{"id":"enabling-and-disabling-operations","title":"Enabling and Disabling Operations"},{"id":"configuring-operations","title":"Configuring Operations"},{"id":"prefixing-all-routes-of-all-operations","title":"Prefixing All Routes of All Operations"},{"id":"expose-a-model-without-any-routes","title":"Expose a Model Without Any Routes"}]},{"id":"graphql","title":"GraphQL Support","anchors":[{"id":"enabling-graphql","title":"Enabling GraphQL"},{"id":"changing-location-of-the-graphql-endpoint","title":"Changing Location of the GraphQL Endpoint"},{"id":"graphiql","title":"GraphiQL","anchors":[{"id":"add-another-location-for-graphiql","title":"Add another Location for GraphiQL"}]},{"id":"graphql-playground","title":"GraphQL Playground","anchors":[{"id":"add-another-location-for-graphql-playground","title":"Add another Location for GraphQL Playground"}]},{"id":"modifying-or-disabling-the-default-ide","title":"Modifying or Disabling the Default IDE"},{"id":"request-with-applicationgraphql-content-type","title":"Request with application/graphql Content-Type"},{"id":"operations","title":"Operations"},{"id":"queries","title":"Queries","anchors":[{"id":"global-object-identifier","title":"Global Object Identifier"},{"id":"custom-queries","title":"Custom Queries"}]},{"id":"mutations","title":"Mutations","anchors":[{"id":"client-mutation-id","title":"Client Mutation ID"},{"id":"custom-mutations","title":"Custom Mutations"}]},{"id":"subscriptions","title":"Subscriptions","anchors":[{"id":"enable-update-subscriptions-for-a-resource","title":"Enable Update Subscriptions for a Resource"},{"id":"subscribe","title":"Subscribe"},{"id":"receiving-an-update","title":"Receiving an Update"},{"id":"subscriptions-cache","title":"Subscriptions Cache"}]},{"id":"workflow-of-the-resolvers","title":"Workflow of the Resolvers","anchors":[{"id":"disabling-resolver-stages","title":"Disabling Resolver Stages"}]},{"id":"events","title":"Events"},{"id":"filters","title":"Filters","anchors":[{"id":"syntax-for-filters-with-a-list-of-key--value-arguments","title":"Syntax for Filters with a List of Key / Value Arguments"},{"id":"filtering-on-nested-properties","title":"Filtering on Nested Properties"}]},{"id":"pagination","title":"Pagination","anchors":[{"id":"using-the-cursor-based-pagination","title":"Using the Cursor-based Pagination"},{"id":"using-the-page-based-pagination","title":"Using the Page-based Pagination"},{"id":"disabling-the-pagination","title":"Disabling the Pagination","anchors":[{"id":"globally","title":"Globally"},{"id":"for-a-specific-resource","title":"For a Specific Resource"},{"id":"for-a-specific-resource-collection-operation","title":"For a Specific Resource Collection Operation"}]},{"id":"partial-pagination","title":"Partial Pagination"}]},{"id":"security","title":"Security","anchors":[{"id":"securing-properties-including-associations","title":"Securing Properties (Including Associations)"}]},{"id":"serialization-groups","title":"Serialization Groups","anchors":[{"id":"different-types-when-using-different-serialization-groups","title":"Different Types when Using Different Serialization Groups"},{"id":"embedded-relation-input-creation-of-relation-in-mutation","title":"Embedded Relation Input (Creation of Relation in Mutation)"}]},{"id":"exception-and-error","title":"Exception and Error","anchors":[{"id":"handling-exceptions-and-errors-logging-filtering-","title":"Handling Exceptions and Errors (Logging, Filtering, ...)"},{"id":"formatting-exceptions-and-errors","title":"Formatting Exceptions and Errors","anchors":[{"id":"custom-exception-normalizer","title":"Custom Exception Normalizer"}]}]},{"id":"name-conversion","title":"Name Conversion","anchors":[{"id":"nesting-separator","title":"Nesting Separator"}]},{"id":"custom-types","title":"Custom Types"},{"id":"modify-the-extracted-types","title":"Modify the Extracted Types"},{"id":"changing-the-serialization-context-dynamically","title":"Changing the Serialization Context Dynamically"},{"id":"export-the-schema-in-sdl","title":"Export the Schema in SDL"},{"id":"handling-file-upload","title":"Handling File Upload","anchors":[{"id":"configuring-the-entity-receiving-the-uploaded-file","title":"Configuring the Entity Receiving the Uploaded File"},{"id":"resolving-the-file-upload","title":"Resolving the File Upload"},{"id":"using-the-createmediaobject-mutation","title":"Using the createMediaObject Mutation"}]},{"id":"change-default-descriptions","title":"Change Default Descriptions"}]},{"id":"state-providers","title":"State Providers"},{"id":"state-processors","title":"State Processors","anchors":[{"id":"creating-a-custom-state-processor","title":"Creating a Custom State Processor"},{"id":"decorating-the-built-in-state-processors","title":"Decorating the Built-In State Processors"}]},{"id":"filters","title":"Filters","anchors":[{"id":"doctrine-orm-and-mongodb-odm-filters","title":"Doctrine ORM and MongoDB ODM Filters","anchors":[{"id":"basic-knowledge","title":"Basic Knowledge"},{"id":"search-filter","title":"Search Filter"},{"id":"date-filter","title":"Date Filter","anchors":[{"id":"managing-null-values","title":"Managing null Values"}]},{"id":"boolean-filter","title":"Boolean Filter"},{"id":"numeric-filter","title":"Numeric Filter"},{"id":"range-filter","title":"Range Filter"},{"id":"exists-filter","title":"Exists Filter","anchors":[{"id":"using-a-custom-exists-query-parameter-name","title":"Using a Custom Exists Query Parameter Name"}]},{"id":"order-filter-sorting","title":"Order Filter (Sorting)","anchors":[{"id":"comparing-with-null-values","title":"Comparing with Null Values"},{"id":"using-a-custom-order-query-parameter-name","title":"Using a Custom Order Query Parameter Name"}]},{"id":"filtering-on-nested-properties","title":"Filtering on Nested Properties"},{"id":"enabling-a-filter-for-all-properties-of-a-resource","title":"Enabling a Filter for All Properties of a Resource"}]},{"id":"elasticsearch-filters","title":"Elasticsearch Filters","anchors":[{"id":"ordering-filter-sorting","title":"Ordering Filter (Sorting)","anchors":[{"id":"using-a-custom-order-query-parameter-name-elastic","title":"Using a Custom Order Query Parameter Name (Elastic)"}]},{"id":"match-filter","title":"Match Filter"},{"id":"term-filter","title":"Term Filter"},{"id":"filtering-on-nested-properties-elastic","title":"Filtering on Nested Properties (Elastic)"}]},{"id":"serializer-filters","title":"Serializer Filters","anchors":[{"id":"group-filter","title":"Group Filter"},{"id":"property-filter","title":"Property filter"}]},{"id":"creating-custom-filters","title":"Creating Custom Filters","anchors":[{"id":"creating-custom-doctrine-orm-filters","title":"Creating Custom Doctrine ORM Filters","anchors":[{"id":"manual-service-and-attribute-registration","title":"Manual Service and Attribute Registration"}]},{"id":"creating-custom-doctrine-mongodb-odm-filters","title":"Creating Custom Doctrine MongoDB ODM Filters"},{"id":"creating-custom-elasticsearch-filters","title":"Creating Custom Elasticsearch Filters"},{"id":"using-doctrine-orm-filters","title":"Using Doctrine ORM Filters"}]},{"id":"apifilter-attribute","title":"ApiFilter Attribute"}]},{"id":"subresources","title":"Subresources","anchors":[{"id":"uri-variables-configuration","title":"URI Variables Configuration","anchors":[{"id":"answer-to-a-question","title":"Answer to a Question"},{"id":"company-employees","title":"Company Employee's"}]}]},{"id":"serialization","title":"The Serialization Process","anchors":[{"id":"overall-process","title":"Overall Process"},{"id":"available-serializers","title":"Available Serializers"},{"id":"the-serialization-context-groups-and-relations","title":"The Serialization Context, Groups and Relations","anchors":[{"id":"configuration","title":"Configuration"}]},{"id":"using-serialization-groups","title":"Using Serialization Groups"},{"id":"using-serialization-groups-per-operation","title":"Using Serialization Groups per Operation"},{"id":"embedding-relations","title":"Embedding Relations","anchors":[{"id":"normalization","title":"Normalization"},{"id":"denormalization","title":"Denormalization"},{"id":"force-iri-with-relations-of-the-same-type-parentchilds-relations","title":"Force IRI with relations of the same type (parent/childs relations)"},{"id":"plain-identifiers","title":"Plain Identifiers"}]},{"id":"property-normalization-context","title":"Property Normalization Context"},{"id":"calculated-field","title":"Calculated Field"},{"id":"changing-the-serialization-context-dynamically","title":"Changing the Serialization Context Dynamically"},{"id":"changing-the-serialization-context-on-a-per-item-basis","title":"Changing the Serialization Context on a Per-item Basis"},{"id":"name-conversion","title":"Name Conversion"},{"id":"decorating-a-serializer-and-adding-extra-data","title":"Decorating a Serializer and Adding Extra Data"},{"id":"entity-identifier-case","title":"Entity Identifier Case"},{"id":"embedding-the-json-ld-context","title":"Embedding the JSON-LD Context"},{"id":"collection-relation","title":"Collection Relation"}]},{"id":"validation","title":"Validation","anchors":[{"id":"validating-submitted-data","title":"Validating Submitted Data"},{"id":"using-validation-groups","title":"Using Validation Groups"},{"id":"using-validation-groups-on-operations","title":"Using Validation Groups on Operations"},{"id":"dynamic-validation-groups","title":"Dynamic Validation Groups"},{"id":"sequential-validation-groups","title":"Sequential Validation Groups"},{"id":"validating-delete-operations","title":"Validating Delete Operations"},{"id":"error-levels-and-payload-serialization","title":"Error Levels and Payload Serialization"},{"id":"validation-on-collection-relations","title":"Validation on Collection Relations"},{"id":"open-vocabulary-generated-from-validation-metadata","title":"Open Vocabulary Generated from Validation Metadata"},{"id":"specification-property-restrictions","title":"Specification property restrictions"}]},{"id":"security","title":"Security","anchors":[{"id":"executing-access-control-rules-after-denormalization","title":"Executing Access Control Rules After Denormalization"},{"id":"hooking-custom-permission-checks-using-voters","title":"Hooking Custom Permission Checks Using Voters"},{"id":"configuring-the-access-control-error-message","title":"Configuring the Access Control Error Message"},{"id":"filtering-collection-according-to-the-current-user-permissions","title":"Filtering Collection According to the Current User Permissions"},{"id":"disabling-operations","title":"Disabling Operations"},{"id":"changing-serialization-groups-depending-of-the-current-user","title":"Changing Serialization Groups Depending of the Current User"}]},{"id":"content-negotiation","title":"Content Negotiation","anchors":[{"id":"configuring-formats-globally","title":"Configuring Formats Globally"},{"id":"configuring-patch-formats","title":"Configuring PATCH Formats"},{"id":"configuring-error-formats","title":"Configuring Error Formats"},{"id":"configuring-formats-for-a-specific-resource-or-operation","title":"Configuring Formats For a Specific Resource or Operation"},{"id":"supporting-custom-formats","title":"Supporting Custom Formats","anchors":[{"id":"reusing-the-api-platform-infrastructure","title":"Reusing the API Platform Infrastructure"},{"id":"contributing-support-for-new-formats","title":"Contributing Support for New Formats"}]}]},{"id":"pagination","title":"Pagination","anchors":[{"id":"disabling-the-pagination","title":"Disabling the Pagination","anchors":[{"id":"disabling-the-pagination-globally","title":"Disabling the Pagination Globally"},{"id":"disabling-the-pagination-for-a-specific-resource","title":"Disabling the Pagination For a Specific Resource"},{"id":"disabling-the-pagination-client-side","title":"Disabling the Pagination Client-side","anchors":[{"id":"disabling-the-pagination-client-side-globally","title":"Disabling the Pagination Client-side Globally"},{"id":"disabling-the-pagination-client-side-for-a-specific-resource","title":"Disabling the Pagination Client-side For a Specific Resource"}]}]},{"id":"changing-the-number-of-items-per-page","title":"Changing the Number of Items per Page","anchors":[{"id":"changing-the-number-of-items-per-page-globally","title":"Changing the Number of Items per Page Globally"},{"id":"changing-the-number-of-items-per-page-for-a-specific-resource","title":"Changing the Number of Items per Page For a Specific Resource"},{"id":"changing-the-number-of-items-per-page-client-side","title":"Changing the Number of Items per Page Client-side","anchors":[{"id":"changing-the-number-of-items-per-page-client-side-globally","title":"Changing the Number of Items per Page Client-side Globally"},{"id":"changing-the-number-of-items-per-page-client-side-for-a-specific-resource","title":"Changing the Number of Items per Page Client-side For a Specific Resource"}]}]},{"id":"changing-maximum-items-per-page","title":"Changing Maximum Items Per Page","anchors":[{"id":"changing-maximum-items-per-page-globally","title":"Changing Maximum Items Per Page Globally"},{"id":"changing-maximum-items-per-page-for-a-specific-resource","title":"Changing Maximum Items Per Page For a Specific Resource"},{"id":"changing-maximum-items-per-page-for-a-specific-resource-collection-operation","title":"Changing Maximum Items Per Page For a Specific Resource Collection Operation"}]},{"id":"partial-pagination","title":"Partial Pagination","anchors":[{"id":"partial-pagination-globally","title":"Partial Pagination Globally"},{"id":"partial-pagination-for-a-specific-resource","title":"Partial Pagination For a Specific Resource"},{"id":"partial-pagination-client-side","title":"Partial Pagination Client-side","anchors":[{"id":"partial-pagination-client-side-globally","title":"Partial Pagination Client-side Globally"},{"id":"partial-pagination-client-side-for-a-specific-resource","title":"Partial Pagination Client-side For a Specific Resource"}]}]},{"id":"cursor-based-pagination","title":"Cursor-Based Pagination"},{"id":"controlling-the-behavior-of-the-doctrine-orm-paginator","title":"Controlling The Behavior of The Doctrine ORM Paginator"},{"id":"custom-controller-action","title":"Custom Controller Action"},{"id":"pagination-for-custom-state-providers","title":"Pagination for Custom State Providers"}]},{"id":"deprecations","title":"Deprecating Resources and Properties (Alternative to Versioning)","anchors":[{"id":"deprecating-resource-classes-operations-and-properties","title":"Deprecating Resource Classes, Operations and Properties"},{"id":"setting-the-sunset-http-header-to-indicate-when-a-resource-or-an-operation-will-be-removed","title":"Setting the Sunset HTTP Header to Indicate When a Resource or an Operation Will Be Removed"}]},{"id":"default-order","title":"Overriding Default Order"},{"id":"performance","title":"Performance and Cache","anchors":[{"id":"enabling-the-built-in-http-cache-invalidation-system","title":"Enabling the Built-in HTTP Cache Invalidation System","anchors":[{"id":"extending-cache-tags-for-invalidation","title":"Extending Cache-Tags for Invalidation"}]},{"id":"setting-custom-http-cache-headers","title":"Setting Custom HTTP Cache Headers"},{"id":"enabling-the-metadata-cache","title":"Enabling the Metadata Cache"},{"id":"using-ppm-php-pm","title":"Using PPM (PHP-PM)"},{"id":"doctrine-queries-and-indexes","title":"Doctrine Queries and Indexes","anchors":[{"id":"search-filter","title":"Search Filter"},{"id":"eager-loading","title":"Eager Loading","anchors":[{"id":"max-joins","title":"Max Joins"},{"id":"fetch-partial","title":"Fetch Partial"},{"id":"force-eager","title":"Force Eager"},{"id":"override-at-resource-and-operation-level","title":"Override at Resource and Operation Level"},{"id":"disable-eager-loading","title":"Disable Eager Loading"}]},{"id":"partial-pagination","title":"Partial Pagination"}]},{"id":"profiling-with-blackfireio","title":"Profiling with Blackfire.io"}]},{"id":"extensions","title":"Extensions","anchors":[{"id":"custom-doctrine-orm-extension","title":"Custom Doctrine ORM Extension","anchors":[{"id":"example","title":"Example","anchors":[{"id":"blocking-anonymous-users","title":"Blocking Anonymous Users"}]}]},{"id":"custom-doctrine-mongodb-odm-extension","title":"Custom Doctrine MongoDB ODM Extension"},{"id":"custom-elasticsearch-extension","title":"Custom Elasticsearch Extension"}]},{"id":"messenger","title":"Symfony Messenger Integration: CQRS and Async Message Processing","anchors":[{"id":"installing-symfony-messenger","title":"Installing Symfony Messenger"},{"id":"dispatching-a-resource-through-the-message-bus","title":"Dispatching a Resource through the Message Bus"},{"id":"registering-a-message-handler","title":"Registering a Message Handler"},{"id":"accessing-the-data-returned-by-the-handler","title":"Accessing the Data Returned by the Handler"},{"id":"detecting-removals","title":"Detecting Removals"},{"id":"using-messenger-with-an-input-object","title":"Using Messenger with an Input Object"}]},{"id":"dto","title":"Using Data Transfer Objects (DTOs)","anchors":[{"id":"implementing-a-write-operation-with-an-input-different-from-the-resource","title":"Implementing a Write Operation With an Input Different From the Resource"},{"id":"use-messenger-with-an-input-dto","title":"Use Messenger With an Input DTO"},{"id":"implementing-a-read-operation-with-an-output-different-from-the-resource","title":"Implementing a Read Operation With an Output Different From the Resource"}]},{"id":"openapi","title":"OpenAPI Specification Support (formerly Swagger)","anchors":[{"id":"using-the-openapi-command","title":"Using the OpenAPI Command"},{"id":"overriding-the-openapi-specification","title":"Overriding the OpenAPI Specification"},{"id":"using-the-openapi-and-swagger-contexts","title":"Using the OpenAPI and Swagger Contexts"},{"id":"changing-the-name-of-a-definition","title":"Changing the Name of a Definition"},{"id":"changing-operations-in-the-openapi-documentation","title":"Changing Operations in the OpenAPI Documentation"},{"id":"disabling-swagger-ui-or-redoc","title":"Disabling Swagger UI or ReDoc"},{"id":"changing-the-location-of-swagger-ui","title":"Changing the Location of Swagger UI","anchors":[{"id":"changing-the-route","title":"Changing the Route"},{"id":"disabling-swagger-ui-at-the-api-location","title":"Disabling Swagger UI at the API Location"}]},{"id":"using-a-custom-asset-package-in-swagger-ui","title":"Using a custom Asset Package in Swagger UI"},{"id":"overriding-the-ui-template","title":"Overriding the UI Template"},{"id":"compatibility-layer-with-amazon-api-gateway","title":"Compatibility Layer with Amazon API Gateway"},{"id":"oauth","title":"OAuth"},{"id":"info-object","title":"Info Object"}]},{"id":"json-schema","title":"JSON Schema Support","anchors":[{"id":"generating-a-json-schema","title":"Generating a JSON Schema"},{"id":"overriding-the-json-schema-specification","title":"Overriding the JSON Schema Specification"},{"id":"generating-a-json-schema-programmatically","title":"Generating a JSON Schema Programmatically"},{"id":"testing","title":"Testing"}]},{"id":"mercure","title":"Creating Async APIs using the Mercure Protocol","anchors":[{"id":"installing-mercure-support","title":"Installing Mercure Support"},{"id":"pushing-the-api-updates","title":"Pushing the API Updates"},{"id":"dispatching-private-updates-authorized-mode","title":"Dispatching Private Updates (Authorized Mode)"},{"id":"available-options","title":"Available Options"},{"id":"dispatching-restrictive-updates-security-mode","title":"Dispatching Restrictive Updates (Security Mode)"}]},{"id":"push-relations","title":"Pushing Related Resources Using HTTP/2"},{"id":"errors","title":"Errors Handling","anchors":[{"id":"converting-php-exceptions-to-http-errors","title":"Converting PHP Exceptions to HTTP Errors"},{"id":"message-scope","title":"Message Scope"},{"id":"fine-grained-configuration","title":"Fine-grained Configuration"}]},{"id":"external-vocabularies","title":"Using External Vocabularies"},{"id":"operation-path-naming","title":"Operation Path Naming","anchors":[{"id":"configuration","title":"Configuration"},{"id":"create-a-custom-operation-path-resolver","title":"Create a Custom Operation Path Resolver","anchors":[{"id":"defining-the-operation-segment-name-generator","title":"Defining the Operation Segment Name Generator"},{"id":"registering-the-service","title":"Registering the Service"},{"id":"configuring-it","title":"Configuring It"}]}]},{"id":"url-generation-strategy","title":"URL Generation Strategy"},{"id":"extending-jsonld-context","title":"Extending JSON-LD AND Hydra Contexts","anchors":[{"id":"json-ld","title":"JSON-LD"},{"id":"hydra","title":"Hydra"}]},{"id":"identifiers","title":"Identifiers","anchors":[{"id":"custom-identifier-normalizer","title":"Custom Identifier Normalizer"},{"id":"changing-identifier-in-a-doctrine-entity","title":"Changing Identifier in a Doctrine Entity"},{"id":"supported-identifiers","title":"Supported Identifiers"}]},{"id":"mongodb","title":"MongoDB Support","anchors":[{"id":"overview","title":"Overview"},{"id":"enabling-mongodb-support","title":"Enabling MongoDB Support"},{"id":"creating-documents","title":"Creating Documents"},{"id":"filtering","title":"Filtering"},{"id":"creating-custom-extensions","title":"Creating Custom Extensions"},{"id":"adding-execute-options","title":"Adding Execute Options"}]},{"id":"elasticsearch","title":"Elasticsearch Support","anchors":[{"id":"overview","title":"Overview"},{"id":"enabling-reading-support","title":"Enabling Reading Support"},{"id":"creating-models","title":"Creating Models","anchors":[{"id":"creating-custom-mapping","title":"Creating custom mapping"}]},{"id":"filtering","title":"Filtering"},{"id":"creating-custom-extensions","title":"Creating Custom Extensions"}]},{"id":"controllers","title":"Creating Custom Operations and Controllers","anchors":[{"id":"using-serialization-groups","title":"Using Serialization Groups"},{"id":"retrieving-the-entity","title":"Retrieving the Entity"},{"id":"alternative-method","title":"Alternative Method"}]},{"id":"events","title":"The Event System","anchors":[{"id":"built-in-event-listeners","title":"Built-in Event Listeners"},{"id":"custom-event-listeners","title":"Custom Event Listeners"}]},{"id":"file-upload","title":"Handling File Upload","anchors":[{"id":"installing-vichuploaderbundle","title":"Installing VichUploaderBundle"},{"id":"uploading-to-a-dedicated-resource","title":"Uploading to a Dedicated Resource","anchors":[{"id":"configuring-the-resource-receiving-the-uploaded-file","title":"Configuring the Resource Receiving the Uploaded File"},{"id":"creating-the-controller","title":"Creating the Controller"},{"id":"resolving-the-file-url","title":"Resolving the File URL"},{"id":"making-a-request-to-the-media_objects-endpoint","title":"Making a Request to the /media_objects Endpoint"},{"id":"accessing-your-media-objects-directly","title":"Accessing Your Media Objects Directly"},{"id":"linking-a-mediaobject-resource-to-another-resource","title":"Linking a MediaObject Resource to Another Resource"},{"id":"testing","title":"Testing"}]},{"id":"uploading-to-an-existing-resource-with-its-fields","title":"Uploading to an Existing Resource with its Fields","anchors":[{"id":"configuring-the-existing-resource-receiving-the-uploaded-file","title":"Configuring the Existing Resource Receiving the Uploaded File"},{"id":"handling-the-multipart-deserialization","title":"Handling the Multipart Deserialization"}]}]},{"id":"jwt","title":"JWT Authentication","anchors":[{"id":"installing-lexikjwtauthenticationbundle","title":"Installing LexikJWTAuthenticationBundle"},{"id":"configuring-the-symfony-securitybundle","title":"Configuring the Symfony SecurityBundle","anchors":[{"id":"adding-authentication-to-an-api-which-uses-a-path-prefix","title":"Adding Authentication to an API Which Uses a Path Prefix"},{"id":"be-sure-to-have-lexikjwtauthentication-configured-on-your-useridentityfield","title":"Be sure to have lexikjwtauthentication configured on your useridentityfield"}]},{"id":"documenting-the-authentication-mechanism-with-swaggeropen-api","title":"Documenting the Authentication Mechanism with Swagger/Open API","anchors":[{"id":"configuring-api-platform","title":"Configuring API Platform"},{"id":"adding-a-new-api-key","title":"Adding a New API Key"},{"id":"adding-endpoint-to-swaggerui-to-retrieve-a-jwt-token","title":"Adding endpoint to SwaggerUI to retrieve a JWT token"}]},{"id":"testing","title":"Testing","anchors":[{"id":"improving-tests-suite-speed","title":"Improving Tests Suite Speed"}]}]},{"id":"form-data","title":"Accept application/x-www-form-urlencoded Form Data","anchors":[{"id":"create-your-deserializelistener-decorator","title":"Create your DeserializeListener Decorator"},{"id":"creating-the-service-definition","title":"Creating the Service Definition"}]},{"id":"angularjs-integration","title":"AngularJS Integration","anchors":[{"id":"restangular","title":"Restangular"},{"id":"ng-admin","title":"ng-admin"}]},{"id":"fosuser-bundle","title":"FOSUserBundle Integration","anchors":[{"id":"installing-the-bundle","title":"Installing the Bundle"},{"id":"creating-a-user-entity-with-serialization-groups","title":"Creating a User Entity with Serialization Groups"}]},{"id":"nelmio-api-doc","title":"NelmioApiDocBundle Integration"},{"id":"bootstrap","title":"Bootstraping the core library"},{"id":"configuration","title":"Configuration","anchors":[{"id":"global-resources-defaults","title":"Global Resources Defaults"}]},{"id":"migrate-from-fosrestbundle","title":"Migrate From FOSRestBundle","anchors":[{"id":"features-comparison","title":"Features Comparison","anchors":[{"id":"make-crud-endpoints","title":"Make CRUD endpoints"},{"id":"make-custom-controllers","title":"Make custom controllers"},{"id":"routing-system-with-native-documentation-support","title":"Routing system (with native documentation support)"},{"id":"hook-into-the-requests-handling","title":"Hook into the requests handling"},{"id":"customize-the-formats-of-the-requests-and-the-responses","title":"Customize the formats of the requests and the responses"},{"id":"name-conversion","title":"Name conversion"},{"id":"handle-errors","title":"Handle errors"},{"id":"security","title":"Security"},{"id":"api-versioning","title":"API versioning"}]}]}]},{"title":"Schema Generator","path":"schema-generator","items":[{"id":"index","title":"The Schema Generator","anchors":[{"id":"what-is-schemaorg","title":"What Is Schema.org?"},{"id":"why-use-schemaorg-data-to-generate-a-php-model","title":"Why Use Schema.org Data to Generate a PHP Model?","anchors":[{"id":"dont-reinvent-the-wheel","title":"Don't Reinvent the Wheel"},{"id":"improve-seo-and-user-experience","title":"Improve SEO and User Experience"},{"id":"be-ready-for-the-future","title":"Be Ready for The Future"}]},{"id":"documentation","title":"Documentation"}]},{"id":"getting-started","title":"Getting Started","anchors":[{"id":"installation","title":"Installation"},{"id":"configuration","title":"Configuration","anchors":[{"id":"model-scaffolding","title":"Model Scaffolding"},{"id":"openapi-generation","title":"OpenAPI Generation"}]},{"id":"usage","title":"Usage"},{"id":"load-previously-generated-files","title":"Load Previously Generated Files"},{"id":"going-further","title":"Going Further","anchors":[{"id":"cardinality-extraction","title":"Cardinality Extraction"}]}]},{"id":"configuration","title":"Configuration","anchors":[{"id":"customizing-php-namespaces","title":"Customizing PHP Namespaces"},{"id":"forcing-a-field-type-range","title":"Forcing a Field Type (Range)"},{"id":"forcing-a-field-cardinality","title":"Forcing a Field Cardinality"},{"id":"changing-the-default-cardinality","title":"Changing the Default Cardinality"},{"id":"adding-a-custom-attribute-or-modifying-a-generated-attribute","title":"Adding a Custom Attribute or Modifying a Generated Attribute"},{"id":"forcing-or-enabling-a-class-parent","title":"Forcing (or Enabling) a Class Parent"},{"id":"forcing-a-class-to-be-abstract","title":"Forcing a Class to be Abstract"},{"id":"define-api-platform-operations","title":"Define API Platform Operations"},{"id":"forcing-a-nullable-property","title":"Forcing a Nullable Property"},{"id":"forcing-a-unique-property","title":"Forcing a Unique Property"},{"id":"making-a-property-read-only","title":"Making a Property Read-Only"},{"id":"making-a-property-write-only","title":"Making a Property Write-Only"},{"id":"forcing-an-embeddable-class-to-be-embedded","title":"Forcing an Embeddable Class to be Embedded"},{"id":"skipping-accessor-method-generation","title":"Skipping Accessor Method Generation"},{"id":"using-fluent-mutator-methods","title":"Using Fluent Mutator Methods"},{"id":"disabling-the-id-generator","title":"Disabling the id Generator"},{"id":"generating-uuids","title":"Generating UUIDs"},{"id":"user-submitted-uuids","title":"User-submitted UUIDs"},{"id":"generating-custom-ids","title":"Generating Custom IDs"},{"id":"disabling-usage-of-doctrine-collections","title":"Disabling Usage of Doctrine Collections"},{"id":"changing-the-field-visibility","title":"Changing the Field Visibility"},{"id":"generating-asserttype-attributes","title":"Generating Assert\\Type Attributes"},{"id":"forcing-doctrine-inheritance-mapping-attribute","title":"Forcing Doctrine Inheritance Mapping Attribute"},{"id":"interfaces-and-doctrine-resolve-target-entity-listener","title":"Interfaces and Doctrine Resolve Target Entity Listener","anchors":[{"id":"doctrine-resolve-target-entity-config-type","title":"Doctrine Resolve Target Entity Config Type"}]},{"id":"custom-schemas","title":"Custom Schemas"},{"id":"all-types-resolve-types-and-exclude","title":"All Types, Resolve Types and Exclude"},{"id":"checking-goodrelation-compatibility","title":"Checking GoodRelation Compatibility"},{"id":"author-phpdoc","title":"Author PHPDoc"},{"id":"php-file-header","title":"PHP File Header"},{"id":"disabling-generators-and-creating-custom-ones","title":"Disabling Generators and Creating Custom Ones"},{"id":"full-configuration-reference","title":"Full Configuration Reference"}]}]},{"title":"Admin","path":"admin","items":[{"id":"index","title":"The API Platform Admin","anchors":[{"id":"features","title":"Features"}]},{"id":"getting-started","title":"Getting Started","anchors":[{"id":"installation","title":"Installation"},{"id":"creating-the-admin","title":"Creating the Admin"}]},{"id":"handling-relations","title":"Handling Relations","anchors":[{"id":"embedded-relations","title":"Embedded Relations"},{"id":"display-a-field-of-an-embedded-relation","title":"Display a Field of an Embedded Relation"},{"id":"using-an-autocomplete-input-for-relations","title":"Using an Autocomplete Input for Relations"}]},{"id":"openapi","title":"OpenAPI","anchors":[{"id":"data-provider","title":"Data Provider"},{"id":"mercure-support","title":"Mercure Support"}]},{"id":"schema.org","title":"Using the Schema.org Vocabulary","anchors":[{"id":"displaying-related-resources-name-instead-of-its-iri","title":"Displaying Related Resource's Name Instead of its IRI"},{"id":"emails-urls-and-identifiers","title":"Emails, URLs and Identifiers"}]},{"id":"validation","title":"Validation","anchors":[{"id":"client-side-validation","title":"Client-side Validation"},{"id":"server-side-validation","title":"Server-side Validation"}]},{"id":"real-time-mercure","title":"Real-time Updates With Mercure","anchors":[{"id":"advanced-configuration","title":"Advanced Configuration"}]},{"id":"authentication-support","title":"Authentication Support"},{"id":"file-upload","title":"Handling File Upload"},{"id":"performance","title":"Performance","anchors":[{"id":"retrieve-all-relations-in-one-request","title":"Retrieve All Relations in One Request"}]},{"id":"customizing","title":"Customizing the Admin","anchors":[{"id":"customizing-the-admins-main-page-and-the-resource-list","title":"Customizing the Admin's Main Page and the Resource List"},{"id":"customizing-the-list-view","title":"Customizing the List View"},{"id":"customizing-the-show-view","title":"Customizing the Show View"},{"id":"customizing-the-create-form","title":"Customizing the Create Form"},{"id":"customizing-the-edit-form","title":"Customizing the Edit Form"},{"id":"going-further","title":"Going Further"}]},{"id":"components","title":"Components","anchors":[{"id":"resource-components","title":"Resource Components","anchors":[{"id":"adminguesser","title":"AdminGuesser","anchors":[{"id":"props","title":"Props"}]},{"id":"resourceguesser","title":"ResourceGuesser","anchors":[{"id":"resourceguesser-props","title":"ResourceGuesser Props"}]}]},{"id":"page-components","title":"Page Components","anchors":[{"id":"listguesser","title":"ListGuesser","anchors":[{"id":"listguesser-props","title":"ListGuesser Props"}]},{"id":"createguesser","title":"CreateGuesser","anchors":[{"id":"createguesser-props","title":"CreateGuesser Props"}]},{"id":"editguesser","title":"EditGuesser","anchors":[{"id":"editguesser-props","title":"EditGuesser Props"}]},{"id":"showguesser","title":"ShowGuesser","anchors":[{"id":"showguesser-props","title":"ShowGuesser Props"}]}]},{"id":"hydra","title":"Hydra","anchors":[{"id":"hydraadmin","title":"HydraAdmin","anchors":[{"id":"hydraadmin-props","title":"HydraAdmin Props"}]},{"id":"hydra-data-provider","title":"Hydra Data Provider"},{"id":"hydra-schema-analyzer","title":"Hydra Schema Analyzer"}]},{"id":"openapi","title":"OpenAPI","anchors":[{"id":"openapiadmin","title":"OpenApiAdmin","anchors":[{"id":"openapiadmin-props","title":"OpenApiAdmin Props"}]},{"id":"open-api-data-provider","title":"Open API Data Provider"},{"id":"open-api-schema-analyzer","title":"Open API Schema Analyzer"}]},{"id":"other-components","title":"Other Components","anchors":[{"id":"fieldguesser","title":"FieldGuesser","anchors":[{"id":"fieldguesser-props","title":"FieldGuesser Props"}]},{"id":"inputguesser","title":"InputGuesser","anchors":[{"id":"inputguesser-props","title":"InputGuesser Props"}]}]}]}]},{"title":"Create Client","path":"create-client","items":[{"id":"index","title":"API Platform Create Client","anchors":[{"id":"generated-react-and-react-native-apps-updated-in-real-time","title":"Generated React and React Native Apps, Updated in Real Time"},{"id":"features","title":"Features"}]},{"id":"nextjs","title":"Next.js Generator","anchors":[{"id":"install","title":"Install"},{"id":"generating-routes","title":"Generating Routes"},{"id":"starting-the-project","title":"Starting the Project"},{"id":"screenshots","title":"Screenshots"}]},{"id":"nuxtjs","title":"Nuxt.js Generator","anchors":[{"id":"install","title":"Install","anchors":[{"id":"nuxt","title":"Nuxt"},{"id":"installing-the-generator-dependencies","title":"Installing the Generator Dependencies"}]},{"id":"updating-nuxt-config","title":"Updating Nuxt Config"},{"id":"generating-routes","title":"Generating Routes"},{"id":"updating-default-layout","title":"Updating Default Layout"},{"id":"starting-the-project","title":"Starting the Project"},{"id":"screenshots","title":"Screenshots"}]},{"id":"vuetify","title":"Vuetify Generator","anchors":[{"id":"install-with-docker","title":"Install With Docker"},{"id":"install-without-docker","title":"Install Without Docker"},{"id":"generating-the-vuejs-web-app","title":"Generating the VueJS Web App"}]},{"id":"quasar","title":"Quasar Framework Generator"},{"id":"react","title":"React Generator","anchors":[{"id":"install","title":"Install"},{"id":"generating-a-web-app","title":"Generating a Web App"},{"id":"screenshots","title":"Screenshots"}]},{"id":"react-native","title":"React Native generator","anchors":[{"id":"install","title":"Install"},{"id":"generating-a-native-app","title":"Generating a Native App"},{"id":"screenshots-in-ios-simulator","title":"Screenshots in iOS Simulator"}]},{"id":"vuejs","title":"Vue.js Generator"},{"id":"typescript","title":"TypeScript Interfaces","anchors":[{"id":"example","title":"Example"}]},{"id":"custom","title":"Custom Generator","anchors":[{"id":"usage","title":"Usage"},{"id":"example","title":"Example","anchors":[{"id":"generator","title":"Generator"},{"id":"template","title":"Template"}]}]},{"id":"troubleshooting","title":"Troubleshooting","anchors":[{"id":"self-signed-tls-certificate","title":"Self-Signed TLS Certificate"},{"id":"authenticated-api","title":"Authenticated API"},{"id":"apidocumentation-doesnt-exist","title":"ApiDocumentation doesn't exist"},{"id":"cannot-read-property-type","title":"Cannot read property '@type'"},{"id":"dereferencing-a-url-did-not-result-in-a-json-object","title":"Dereferencing a URL did not result in a JSON object"},{"id":"docker-distribution-on-windows-and-hot-reloading","title":"Docker distribution on Windows and hot-reloading"}]}]},{"title":"Deployment","path":"deployment","items":[{"id":"index","title":"Deploying API Platform Applications"},{"id":"docker-compose","title":"Deploying with Docker Compose","anchors":[{"id":"preparing-a-server","title":"Preparing a Server"},{"id":"configuring-a-domain-name","title":"Configuring a Domain Name"},{"id":"deploying","title":"Deploying"},{"id":"deploying-on-multiple-nodes","title":"Deploying on Multiple Nodes"}]},{"id":"kubernetes","title":"Deploying to a Kubernetes Cluster","anchors":[{"id":"preparing-your-cluster-and-your-local-machine","title":"Preparing Your Cluster and Your Local Machine"},{"id":"creating-and-publishing-the-docker-images","title":"Creating and Publishing the Docker Images","anchors":[{"id":"example-with-the-google-container-registry-and-google-cloud-platform","title":"Example with the Google Container Registry and Google Cloud Platform","anchors":[{"id":"1-build-the-php-and-caddy-docker-images-and-tag-them","title":"1. Build the PHP and Caddy Docker images and tag them"},{"id":"2-push-your-images-to-your-docker-registry","title":"2. Push your images to your Docker registry"}]}]},{"id":"deploying-with-helm-3","title":"Deploying with Helm 3","anchors":[{"id":"1-check-the-helm-version","title":"1. Check the Helm version"},{"id":"2-firstly-you-need-to-update-helm-dependencies-by-running","title":"2. Firstly you need to update helm dependencies by running"},{"id":"3-optional-if-you-made-changes-to-the-helm-chart-check-if-its-format-is-correct","title":"3. Optional: If you made changes to the Helm chart, check if its format is correct"},{"id":"4-deploy-your-api-to-the-container","title":"4. Deploy your API to the container"}]},{"id":"access-the-container","title":"Access the container"},{"id":"caution-for-system-architecture","title":"Caution for system architecture"},{"id":"updates","title":"Updates","anchors":[{"id":"1-always-version-your-images-recommended","title":"1. Always version your images (recommended)"},{"id":"2-use-latest-tags","title":"2. Use :latest tags"}]},{"id":"github-actions-example-for-deployment","title":"GitHub Actions Example for deployment"},{"id":"symfony-messenger","title":"Symfony Messenger"}]},{"id":"minikube","title":"Deploying to Minikube","anchors":[{"id":"install-minikube","title":"Install Minikube"},{"id":"building-and-pushing-docker-images","title":"Building and Pushing Docker Images"},{"id":"deploying","title":"Deploying"}]},{"id":"heroku","title":"Deploying an API Platform App on Heroku"},{"id":"traefik","title":"Implement Træfik Into API Platform Dockerized","anchors":[{"id":"basic-implementation","title":"Basic Implementation"},{"id":"known-issues","title":"Known Issues"},{"id":"going-further","title":"Going Further"},{"id":"multiple-instances","title":"Multiple Instances"},{"id":"more-generic-approach","title":"More Generic Approach"}]}]},{"title":"General Information","path":"extra","items":[{"id":"philosophy","title":"API Platform's Philosophy"},{"id":"releases","title":"The Release Process"},{"id":"enterprise","title":"API Platform for Enterprise","anchors":[{"id":"enterprise-ready-open-source-softwaremanaged-for-you","title":"Enterprise-ready open source software—managed for you"}]},{"id":"security","title":"Security Policy","anchors":[{"id":"reporting-a-security-issue","title":"Reporting a Security Issue"},{"id":"resolving-process","title":"Resolving Process"},{"id":"security-updates-with-tidelift","title":"Security Updates With Tidelift"},{"id":"issue-severity","title":"Issue Severity","anchors":[{"id":"attack-complexity","title":"Attack Complexity"},{"id":"impact","title":"Impact"},{"id":"affected-projects","title":"Affected Projects"},{"id":"score-totals","title":"Score Totals"},{"id":"severity-levels","title":"Severity levels"}]},{"id":"credits","title":"Credits"}]},{"id":"troubleshooting","title":"Troubleshooting","anchors":[{"id":"using-docker","title":"Using Docker","anchors":[{"id":"with-docker-toolbox-on-windows","title":"With Docker Toolbox on Windows"},{"id":"error-starting-the-web-server","title":"Error Starting The Web Server"}]},{"id":"using-api-platform-and-jms-serializer-in-the-same-project","title":"Using API Platform and JMS Serializer in the same project"},{"id":"upstream-sent-too-big-header-while-reading-response-header-from-upstream-nginx-502-error","title":"\"upstream sent too big header while reading response header from upstream\" NGINX 502 Error"}]},{"id":"contribution-guides","title":"Contribution guides"},{"id":"conduct","title":"Contributor Code of Conduct","anchors":[{"id":"our-pledge","title":"Our Pledge"},{"id":"our-standards","title":"Our Standards"},{"id":"our-responsibilities","title":"Our Responsibilities"},{"id":"scope","title":"Scope"},{"id":"enforcement","title":"Enforcement"},{"id":"attribution","title":"Attribution"}]}]}]},"next":{"slug":"/docs/main/core/jwt/","title":"JWT Authentication"},"prefixedVersion":"main","previous":{"slug":"/docs/main/core/events/","title":"The Event System"},"title":"Handling File Upload","urlEditDocumentation":"https://github.com/api-platform/docs/edit/main/core/file-upload.md","version":"main/"}},"staticQueryHashes":["1552981879"]}